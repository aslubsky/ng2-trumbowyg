export class TrumbowygFontsPlugin {
    static init(editor, lang) {
        TrumbowygFontsPlugin.editor = editor;
        // Set default fonts
        TrumbowygFontsPlugin.fonts = [
            "Arial",
            "Courier",
            "Courier New",
            "Georgia",
            "Helvetica",
            "Impact",
            "Monospace",
            "Sans-serif",
            "Serif",
            "Tahoma",
            "Times New Roman",
            "Trebuchet MS",
            "Verdana"
        ];
        // Add all fonts in two dropdowns
        editor.plugins.fontName = {
            init: function (trumbowyg) {
                // console.log('fontName trumbowyg', trumbowyg);
                trumbowyg.o.plugins.fontName = trumbowyg.o.plugins.fontName || {};
                trumbowyg.addBtnDef('fontName', {
                    dropdown: TrumbowygFontsPlugin.buildDropdown('fontName', trumbowyg)
                });
            }
        };
    }
    static buildDropdown(func, trumbowyg) {
        var dropdown = [];
        TrumbowygFontsPlugin.fonts.forEach((font, i) => {
            // console.info('TrumbowygFontsPlugin', font, i);
            var fontAlias = font.toLowerCase().replace(' ', '').replace('-', '');
            var btn = func + '_' + fontAlias;
            trumbowyg.addBtnDef(btn, {
                fn: function (param, t) {
                    // console.info(param, t);
                    document.execCommand('fontName', false, param);
                    t.syncCode();
                },
                text: font,
                param: font
            });
            dropdown.push(btn);
        });
        return dropdown;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9udHMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvYXNsdWJza3kvd29yay9jb2xsYWJvcmF0b3IvbmcyLXRydW1ib3d5Zy9zcmMvIiwic291cmNlcyI6WyJmb250cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLE9BQU8sb0JBQW9CO0lBSXRCLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBVyxFQUFFLElBQVk7UUFDeEMsb0JBQW9CLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUVyQyxvQkFBb0I7UUFDcEIsb0JBQW9CLENBQUMsS0FBSyxHQUFHO1lBQ3pCLE9BQU87WUFDUCxTQUFTO1lBQ1QsYUFBYTtZQUNiLFNBQVM7WUFDVCxXQUFXO1lBQ1gsUUFBUTtZQUNSLFdBQVc7WUFDWCxZQUFZO1lBQ1osT0FBTztZQUNQLFFBQVE7WUFDUixpQkFBaUI7WUFDakIsY0FBYztZQUNkLFNBQVM7U0FDWixDQUFDO1FBRUYsaUNBQWlDO1FBQ2pDLE1BQU0sQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHO1lBQ3RCLElBQUksRUFBRSxVQUFVLFNBQWM7Z0JBQzFCLGdEQUFnRDtnQkFDaEQsU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsSUFBSSxFQUFFLENBQUM7Z0JBQ2xFLFNBQVMsQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFO29CQUM1QixRQUFRLEVBQUUsb0JBQW9CLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRSxTQUFTLENBQUM7aUJBQ3RFLENBQUMsQ0FBQztZQUNQLENBQUM7U0FDSixDQUFBO0lBRUwsQ0FBQztJQUVPLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBUyxFQUFFLFNBQWM7UUFDbEQsSUFBSSxRQUFRLEdBQWEsRUFBRSxDQUFDO1FBRTVCLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFZLEVBQUUsQ0FBUyxFQUFFLEVBQUU7WUFDM0QsaURBQWlEO1lBQ2pELElBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDckUsSUFBSSxHQUFHLEdBQUcsSUFBSSxHQUFHLEdBQUcsR0FBRyxTQUFTLENBQUM7WUFDakMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUU7Z0JBQ3JCLEVBQUUsRUFBRSxVQUFVLEtBQVUsRUFBRSxDQUFNO29CQUM1QiwwQkFBMEI7b0JBQzFCLFFBQVEsQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztvQkFDL0MsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO2dCQUNqQixDQUFDO2dCQUNELElBQUksRUFBRSxJQUFJO2dCQUNWLEtBQUssRUFBRSxJQUFJO2FBQ2QsQ0FBQyxDQUFDO1lBQ0gsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN2QixDQUFDLENBQUMsQ0FBQztRQUdILE9BQU8sUUFBUSxDQUFDO0lBQ3BCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImRlY2xhcmUgdmFyIGpRdWVyeTogYW55O1xuXG5leHBvcnQgY2xhc3MgVHJ1bWJvd3lnRm9udHNQbHVnaW4ge1xuICAgIHB1YmxpYyBzdGF0aWMgZWRpdG9yOiBhbnk7XG4gICAgcHVibGljIHN0YXRpYyBmb250czogc3RyaW5nW107XG5cbiAgICBwdWJsaWMgc3RhdGljIGluaXQoZWRpdG9yOiBhbnksIGxhbmc6IHN0cmluZykge1xuICAgICAgICBUcnVtYm93eWdGb250c1BsdWdpbi5lZGl0b3IgPSBlZGl0b3I7XG5cbiAgICAgICAgLy8gU2V0IGRlZmF1bHQgZm9udHNcbiAgICAgICAgVHJ1bWJvd3lnRm9udHNQbHVnaW4uZm9udHMgPSBbXG4gICAgICAgICAgICBcIkFyaWFsXCIsXG4gICAgICAgICAgICBcIkNvdXJpZXJcIixcbiAgICAgICAgICAgIFwiQ291cmllciBOZXdcIixcbiAgICAgICAgICAgIFwiR2VvcmdpYVwiLFxuICAgICAgICAgICAgXCJIZWx2ZXRpY2FcIixcbiAgICAgICAgICAgIFwiSW1wYWN0XCIsXG4gICAgICAgICAgICBcIk1vbm9zcGFjZVwiLFxuICAgICAgICAgICAgXCJTYW5zLXNlcmlmXCIsXG4gICAgICAgICAgICBcIlNlcmlmXCIsXG4gICAgICAgICAgICBcIlRhaG9tYVwiLFxuICAgICAgICAgICAgXCJUaW1lcyBOZXcgUm9tYW5cIixcbiAgICAgICAgICAgIFwiVHJlYnVjaGV0IE1TXCIsXG4gICAgICAgICAgICBcIlZlcmRhbmFcIlxuICAgICAgICBdO1xuXG4gICAgICAgIC8vIEFkZCBhbGwgZm9udHMgaW4gdHdvIGRyb3Bkb3duc1xuICAgICAgICBlZGl0b3IucGx1Z2lucy5mb250TmFtZSA9IHtcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICh0cnVtYm93eWc6IGFueSkge1xuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdmb250TmFtZSB0cnVtYm93eWcnLCB0cnVtYm93eWcpO1xuICAgICAgICAgICAgICAgIHRydW1ib3d5Zy5vLnBsdWdpbnMuZm9udE5hbWUgPSB0cnVtYm93eWcuby5wbHVnaW5zLmZvbnROYW1lIHx8IHt9O1xuICAgICAgICAgICAgICAgIHRydW1ib3d5Zy5hZGRCdG5EZWYoJ2ZvbnROYW1lJywge1xuICAgICAgICAgICAgICAgICAgICBkcm9wZG93bjogVHJ1bWJvd3lnRm9udHNQbHVnaW4uYnVpbGREcm9wZG93bignZm9udE5hbWUnLCB0cnVtYm93eWcpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGJ1aWxkRHJvcGRvd24oZnVuYzogYW55LCB0cnVtYm93eWc6IGFueSkge1xuICAgICAgICB2YXIgZHJvcGRvd246IHN0cmluZ1tdID0gW107XG5cbiAgICAgICAgVHJ1bWJvd3lnRm9udHNQbHVnaW4uZm9udHMuZm9yRWFjaCgoZm9udDogc3RyaW5nLCBpOiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUuaW5mbygnVHJ1bWJvd3lnRm9udHNQbHVnaW4nLCBmb250LCBpKTtcbiAgICAgICAgICAgIHZhciBmb250QWxpYXMgPSBmb250LnRvTG93ZXJDYXNlKCkucmVwbGFjZSgnICcsICcnKS5yZXBsYWNlKCctJywgJycpO1xuICAgICAgICAgICAgdmFyIGJ0biA9IGZ1bmMgKyAnXycgKyBmb250QWxpYXM7XG4gICAgICAgICAgICB0cnVtYm93eWcuYWRkQnRuRGVmKGJ0biwge1xuICAgICAgICAgICAgICAgIGZuOiBmdW5jdGlvbiAocGFyYW06IGFueSwgdDogYW55KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUuaW5mbyhwYXJhbSwgdCk7XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKCdmb250TmFtZScsIGZhbHNlLCBwYXJhbSk7XG4gICAgICAgICAgICAgICAgICAgIHQuc3luY0NvZGUoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHRleHQ6IGZvbnQsXG4gICAgICAgICAgICAgICAgcGFyYW06IGZvbnRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZHJvcGRvd24ucHVzaChidG4pO1xuICAgICAgICB9KTtcblxuXG4gICAgICAgIHJldHVybiBkcm9wZG93bjtcbiAgICB9XG59XG4iXX0=